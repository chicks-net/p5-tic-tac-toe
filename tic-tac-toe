#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use IO::Prompt;

my @moves = qw(X O);

sub new_board {
	my $board = {};
	foreach my $row (qw(A B C)) {
		foreach my $col (1..3) {
			my $spot = $row . $col;
			$board->{$spot} = ' ';
		}
	}

	return $board;
}

sub print_board {
	my ($board) = @_;

	print " ", join(' | ',$board->{'A1'},$board->{'A2'},$board->{'A3'}), "\n";
	print "---+---+---\n";
	print " ", join(' | ',$board->{'B1'},$board->{'B2'},$board->{'B3'}), "\n";
	print "---+---+---\n";
	print " ", join(' | ',$board->{'C1'},$board->{'C2'},$board->{'C3'}), "\n";
}

sub board_winner {
	my ($board) = @_;

	return 0;
}

my $playing = new_board();

my $move = 0;
while (not board_winner and $move < 10) {
	print_board($playing);
	print "\n";

	my $whose_move = $moves[ $move % 2];

	my $move_answer = prompt "[$move] place for $whose_move: ";

	if ($move_answer =~ /^[A-C][1-3]$/) {
		$playing->{$move_answer} = $whose_move;
		$move++;
	} else {
		print "'$move_answer' is not a valid position (A1 .. C3).\n";
	}
}

